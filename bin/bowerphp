#!/usr/bin/env php
<?php

if (PHP_SAPI !== 'cli') {
    echo 'Warning: Bowerphp should be invoked via the CLI version of PHP, not the ' . PHP_SAPI . ' SAPI' . PHP_EOL;
}

require __DIR__ . '/../src/bootstrap.php';

use Bowerphp\Command\UpdateCommand;
use Bowerphp\Config\Config;
use Bowerphp\Console\Application;
use Bowerphp\Installer\Installer;
use Bowerphp\Repository\GithubRepository;
use Bowerphp\Util\Filesystem;
use Bowerphp\Util\ZipArchive;
use Guzzle\Http\Client;
use Pimple\Container;

error_reporting(-1);

if (function_exists('ini_set')) {
    @ini_set('display_errors', 1);

    $memoryInBytes = function ($value) {
        $unit = strtolower(substr($value, -1, 1));
        $value = (int)$value;
        switch ($unit) {
            case 'g':
                $value *= 1024;
            // no break (cumulative multiplier)
            case 'm':
                $value *= 1024;
            // no break (cumulative multiplier)
            case 'k':
                $value *= 1024;
        }

        return $value;
    };

    $memoryLimit = trim(ini_get('memory_limit'));
    // Increase memory_limit if it is lower than 512M
    if ($memoryLimit != -1 && $memoryInBytes($memoryLimit) < 512 * 1024 * 1024) {
        @ini_set('memory_limit', '512M');
    }
    unset($memoryInBytes, $memoryLimit);
}

// run the command application
$container = new Container();
$container['commands'] = function ($container) {
    $filesystem = new Filesystem();
    $httpClient = new Client();
    $config = new Config($filesystem);
    $repository = new GithubRepository();
    $installer = new Installer($filesystem, new ZipArchive(), $config);

    return array(
        new UpdateCommand($config, $filesystem, $httpClient, $repository, $installer)
    );
};
$container['application'] = function ($container) {
    $application = new Application();
    $application->addCommands($container['commands']);
    return $application;
};

$application = $container['application'];
$application->run();